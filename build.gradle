// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        // global variables
        kotlin_version = "1.4.10"
        compose_version = "1.0.0-alpha05"

        androidCompose = [
                "androidx.compose.ui:ui:$compose_version",
                // Tooling support (Previews, etc.)
                "androidx.ui:ui-tooling:$compose_version",
                // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
                "androidx.compose.foundation:foundation:$compose_version",
                // Material Design
                "androidx.compose.material:material:$compose_version",
                // Material design icons
                "androidx.compose.material:material-icons-core:$compose_version",
                "androidx.compose.material:material-icons-extended:$compose_version",
                // Integration with observables
                "androidx.compose.runtime:runtime-livedata:$compose_version"
        ]

        retrofit_version = "2.9.0"
        okhttp_version = "4.9.0"
        moshi_version = "1.11.0"
        networking = [
                "com.squareup.okhttp3:okhttp:$okhttp_version",
                "com.squareup.retrofit2:retrofit:$retrofit_version",
                "com.squareup.retrofit2:converter-moshi:$retrofit_version",
                "com.squareup.moshi:moshi:$moshi_version",
                "com.squareup.moshi:moshi-kotlin:$moshi_version"
        ]
        networkingKapt = [
                "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
        ]


        coroutines_version = '1.3.2'
        coroutines = [
                "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
        ]
        androidCoroutines = [
                "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version",
                "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
        ]
        springCoroutines = [
                "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version",
                "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$coroutines_version"
        ]

        lifecycle_version = "2.1.0"
        work_version = "2.2.0"
        androidLifecycle = [
                "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
                "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
                "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
                "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version",
                "androidx.work:work-runtime-ktx:$work_version",
                "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
        ]


//        // local variables (use def)
//        def androidx_test_version = '1.2.0'
//        def appcompat_version = '1.1.0'
//        def constraint_layout_version = '1.1.3'
//        def expresso_version = '3.2.0'
//        def junit_version = '4.12'
//        def lifecycle_version = '2.1.0'
//        def livedata_version = '2.2.0-rc02'
//        def material_version = '1.0.0'
//        def truth_version = '1.0'
//        def room_version = '2.2.2'
//        def work_version = '2.2.0'
//
//        libraries = [
//                // Kotlin standard library
//                "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
//
//
//                // Android UI and appcompat
//                "androidx.appcompat:appcompat:$appcompat_version",
//                "com.google.android.material:material:$material_version",
//                "androidx.constraintlayout:constraintlayout:$constraint_layout_version",
//
//
//
//                // Room for database
//                "androidx.room:room-ktx:$room_version",
//        ]
//
//        librariesKapt = [
//                "androidx.room:room-compiler:$room_version",
//        ]
//
//        librariesDebug = [
//                "com.google.truth:truth:$truth_version",
//        ]
//
//        testLibraries = [
//                "junit:junit:$junit_version",
//
//                // Coroutines testing
//                "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version",
//
//                // mocks
//                "org.mockito:mockito-core:2.23.0",
//
//                //  Architecture Components testing libraries
//                "androidx.arch.core:core-testing:$lifecycle_version"
//        ]
//
//        androidTestLibraries = [
//                "junit:junit:$junit_version",
//                "androidx.test:runner:$androidx_test_version",
//                "androidx.test:rules:$androidx_test_version",
//
//                // Espresso
//                "androidx.test.espresso:espresso-core:$expresso_version",
//                "androidx.test.espresso:espresso-contrib:$expresso_version",
//                "androidx.test.espresso:espresso-intents:$expresso_version",
//
//                //  Architecture Components testing libraries
//                "androidx.arch.core:core-testing:$lifecycle_version",
//                "androidx.work:work-testing:$work_version",
//
//                // Coroutines testing
//                "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version",
//        ]
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0-alpha14'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


// Needs improvements.
// Lots of improvements and learn gradle well.
// Can be very very useful

task serve(type: Exec) {
    commandLine './gradlew.bat', 'server:bootRun'
}

task runApp(type: Exec) {
    commandLine './gradlew.bat', 'app:runApp'
}